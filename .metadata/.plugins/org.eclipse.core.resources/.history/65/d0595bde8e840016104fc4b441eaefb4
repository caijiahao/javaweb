package chuchujie.five;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Scanner;
import java.util.Set;
import java.util.TreeSet;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
       Scanner in = new Scanner(System.in);
       while(in.hasNext()){
    	   int n = in.nextInt();
    	   int m = in.nextInt();
    	   int[]dij = new int[n+1],vis = new int[n + 1];
    	   int[][] road = new int[n+1][n+1];
    	   //List<Integer> list = new ArrayList<>();
    	   Set<Integer> set = new TreeSet<>();
    	   for(int i=0;i<n+1;i++){
    		   for(int j=0;j<n+1;j++){
    			   road[i][j]=0;
    		   }
    	   }
    	   
    	   for(int i=0;i<=n;i++){
    		   dij[i] = Integer.MAX_VALUE;
    	   }
    	   
    	   for(int i=0;i<m;i++){
    		   int p = in.nextInt();
    		   int q = in.nextInt();
    		   int distance = in.nextInt();
    		   road[p][q] = distance;
    		   road[q][p] = distance;
    	   }
    	   dij[1] = 0;
    	   vis[1] = 1;
    	   int tmp_i = 1;
    	   int index = Integer.MIN_VALUE;
    	   for (int i = 0; i < n - 1; i++) {
    	   for(int j=1;j<=n;j++){   
    		   if(vis[j]==0&&road[tmp_i][j]!=0){
    			   if(dij[j]>dij[tmp_i]+road[tmp_i][j]){
    				   dij[j]=dij[tmp_i]+road[tmp_i][j];
    				   index = road[tmp_i][j];
    			   }
    		   	}
    		   }
    	   //list.add(index);
    	   set.add(index);
    	   int tmp_min = Integer.MAX_VALUE;
    	   for(int j=1;j<=n;j++){
    		   if (vis[j] == 0 && dij[j] <= tmp_min) {
                   tmp_i = j;
                   tmp_min = dij[j];
               }
    	   }
    	   vis[tmp_i] = 1;
    	   }
    	  // Collections.sort(list); 
    	   
    	  System.out.println(list.get(list.size()-1));
       }
	}
}
